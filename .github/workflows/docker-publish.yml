name: Build, Tag, and Publish Unbound Docker Image

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    - cron: "0 0 1 * *"  # Runs on the 1st day of every month at midnight (UTC)

jobs:
  build-and-tag:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/unbound:base ./unbound

      # Extract Unbound version
      - name: Get Unbound Version
        id: unbound_version
        run: |
          version=$(docker run --rm ${{ secrets.DOCKER_USERNAME }}/unbound:base unbound -v 2>&1 | grep -oP 'unbound\s\K[\d\.]+')
          version=${version%.}
          echo "Unbound version: $version"
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      # Tag Docker Image Based on Branch
      - name: Tag Docker Image
        run: |
          version=${{ steps.unbound_version.outputs.VERSION }}
          if [[ "${{ github.ref_name }}" == "develop" ]]; then
            # Tag as developer
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ${{ secrets.DOCKER_USERNAME }}/unbound:developer
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ${{ secrets.DOCKER_USERNAME }}/unbound:${version}-develop
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ghcr.io/${{ github.repository_owner }}/unbound:developer
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ghcr.io/${{ github.repository_owner }}/unbound:${version}-develop
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            # Tag as latest and version
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ${{ secrets.DOCKER_USERNAME }}/unbound:latest
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ${{ secrets.DOCKER_USERNAME }}/unbound:${version}
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ghcr.io/${{ github.repository_owner }}/unbound:latest
            docker tag ${{ secrets.DOCKER_USERNAME }}/unbound:base ghcr.io/${{ github.repository_owner }}/unbound:${version}

  push-images:
    needs: build-and-tag
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry: [dockerhub, ghcr]
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to the appropriate registry
      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry == 'dockerhub' && 'docker.io' || 'ghcr.io' }}
          username: ${{ matrix.registry == 'dockerhub' && secrets.DOCKER_USERNAME || github.actor }}
          password: ${{ matrix.registry == 'dockerhub' && secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}

      # Push images to the appropriate registry
      - name: Push Images
        run: |
          version=${{ needs.build-and-tag.outputs.VERSION }}
          if [[ "${{ github.ref_name }}" == "develop" ]]; then
            docker push ${{ matrix.registry == 'dockerhub' && secrets.DOCKER_USERNAME || 'ghcr.io/${{ github.repository_owner }}' }}/unbound:developer
            docker push ${{ matrix.registry == 'dockerhub' && secrets.DOCKER_USERNAME || 'ghcr.io/${{ github.repository_owner }}' }}/unbound:${version}-develop
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            docker push ${{ matrix.registry == 'dockerhub' && secrets.DOCKER_USERNAME || 'ghcr.io/${{ github.repository_owner }}' }}/unbound:latest
            docker push ${{ matrix.registry == 'dockerhub' && secrets.DOCKER_USERNAME || 'ghcr.io/${{ github.repository_owner }}' }}/unbound:${version}